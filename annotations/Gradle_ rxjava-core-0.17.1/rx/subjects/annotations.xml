<root>
    <item name='rx.subjects.BehaviorSubject rx.subjects.BehaviorSubject&lt;T&gt; create(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.SubjectSubscriptionManager.SubjectObserver void onNext(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='rx.subjects.PublishSubject void onNext(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='rx.subjects.SubjectSubscriptionManager.State rx.subjects.SubjectSubscriptionManager.State&lt;T&gt; terminate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.AsyncSubject void onNext(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='rx.subjects.BehaviorSubject void onNext(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='rx.subjects.ReplaySubject void onNext(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='rx.subjects.SubjectSubscriptionManager.State rx.subjects.SubjectSubscriptionManager.State&lt;T&gt; addObserver(rx.Subscription, rx.subjects.SubjectSubscriptionManager.SubjectObserver&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.ReplaySubject rx.subjects.ReplaySubject&lt;T&gt; create(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.ReplaySubject rx.subjects.ReplaySubject&lt;T&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.AsyncSubject rx.subjects.AsyncSubject&lt;T&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.AsyncSubject void emitValueToObserver(rx.Notification&lt;T&gt;, rx.Observer&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.SubjectSubscriptionManager.State rx.subjects.SubjectSubscriptionManager.State&lt;T&gt; removeObserver(rx.Subscription)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.BehaviorSubject rx.subjects.BehaviorSubject&lt;T&gt; createWithDefaultValue(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='rx.subjects.PublishSubject rx.subjects.PublishSubject&lt;T&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
